(

  (defconst STATUTE_PRICE_UPDATE_COUNTER -7)
  (defconst STATUTE_P2_SURPLUS_AUCTION_MOD_HASH -6)
  (defconst STATUTE_OFFER_MOD_HASH -5)
  (defconst STATUTE_P2_TREASURY_MOD_HASH -4)
  (defconst STATUTE_TREASURY_APPROVAL_MOD_HASHES -3)
  (defconst STATUTE_CUMULATIVE_INTEREST_DF -2)
  (defconst STATUTE_CUMULATIVE_STABILITY_FEE_DF -1)
  (defconst STATUTE_PRICE_ORACLES 0) ; oracle launcher ID. rename accordingly?
  (defconst STATUTE_STABILITY_FEE_DF 1)
  (defconst STATUTE_INTEREST_DF 2)
  (defconst STATUTE_CUSTOM_ANNOUNCEMENTS 3)
  (defconst STATUTE_VAULT_LIQUIDATION_RATIO_PCT 4)
  (defconst STATUTE_ORACLE_M_OF_N 5)
  (defconst STATUTE_ORACLE_PRICE_UPDATE_DELAY 6)
  (defconst STATUTE_ORACLE_ORACLE_PRICE_UPDATE_DELTA_BPS 7)
  (defconst STATUTE_PRICE_DELAY 8)
  (defconst STATUTE_VAULT_MINIMUM_DEBT 9)
  (defconst STATUTE_VAULT_AUCTION_PRICE_TTL 10)
  (defconst STATUTE_VAULT_AUCTION_PRICE_DECREASE_BPS 11)
  (defconst STATUTE_VAULT_AUCTION_TTL 12)
  (defconst STATUTE_VAULT_AUCTION_STARTING_PRICE_FACTOR 13)
  (defconst STATUTE_VAULT_INITIATOR_INCENTIVE_FLAT 14)
  (defconst STATUTE_VAULT_INITIATOR_INCENTIVE_BPS 15)
  (defconst STATUTE_VAULT_LIQUIDATION_PENALTY_BPS 16)
  (defconst STATUTE_TREASURY_MINIMUM 17)
  (defconst STATUTE_TREASURY_MAXIMUM 18)
  (defconst STATUTE_MINIMUM_STABILITY_FEE_TRANSFER 19)
  (defconst STATUTE_RECHARGE_AUCTION_TTL 20)
  (defconst STATUTE_RECHARGE_AUCTION_MINIMUM_CRT_PRICE 21)
  (defconst STATUTE_RECHARGE_AUCTION_BID_TTL 22)
  (defconst STATUTE_RECHARGE_AUCTION_MINIMUM_BID 23)
  (defconst STATUTE_SURPLUS_AUCTION_TTL 24)
  (defconst STATUTE_SURPLUS_AUCTION_LOT 25)
  (defconst STATUTE_SURPLUS_AUCTION_BID_TTL 26)
  (defconst STATUTE_SAVINGS_MINIMUM_INTEREST_WITHDRAWAL 27)
  (defconst STATUTE_ANNOUNCER_CREDITS_PER_INTERVAL 28)
  (defconst STATUTE_ANNOUNCER_CREDITS_INTERVAL 29)
  (defconst STATUTE_ANNOUNCER_MINIMUM_DEPOSIT 30)
  (defconst STATUTE_ANNOUNCER_PRICE_TTL 31)
  (defconst STATUTE_ANNOUNCER_PENALTY_INTERVAL 32)
  (defconst STATUTE_ANNOUNCER_PENALTY_FACTOR_PER_INTERVAL_BPS 33)
  (defconst STATUTE_ENACTMENT_TIMEOUT_SECONDS 34)
  (defconst STATUTE_ANNOUNCER_DISAPPROVAL_MAXIMUM_PENALTY_BPS 35)
  (defconst STATUTE_ANNOUNCER_DISAPPROVAL_COOLDOWN_INTERVAL 36)

  ;(defconst STATUTES_ANN_PREFIX 0x54) ; chr(84) -> "T" for sTaTuTes
  (defconst STATUTES_MUTATION_PREFIX "m")
  (defconst STATUTE_PREFIX "s")
  (defconst STATUTE_FULL_PREFIX "S")
  (defconst PRICE_PREFIX "p")
  (defconst PROTOCOL_PREFIX "CRT")

  (defun-inline calculate-statutes-puzzle-hash (STATUTES_STRUCT inner_puzzle_hash)
      (curry_hashes (f STATUTES_STRUCT)
                    ; we can also provide a hash of the statutes struct to make it more efficient
                    (if (l (r STATUTES_STRUCT)) (sha256tree STATUTES_STRUCT) (r STATUTES_STRUCT))
                    inner_puzzle_hash
      )
  )

  (defun-inline assert-statute (statutes_puzzle_hash statute_index statute_value)
    (list ASSERT_PUZZLE_ANNOUNCEMENT
      (sha256
         statutes_puzzle_hash
        (concat
          PROTOCOL_PREFIX
          STATUTE_PREFIX statute_index (if (l statute_value) (sha256tree statute_value) statute_value)
        )
      )
    )
  )

  (defun-inline assert-full-statute (statutes_puzzle_hash statute_index statute_full_value)
    (list ASSERT_PUZZLE_ANNOUNCEMENT
      (sha256
         statutes_puzzle_hash
        (concat
          PROTOCOL_PREFIX
          STATUTE_FULL_PREFIX statute_index (sha256tree statute_full_value)
        )
      )
    )
  )

  (defun mutate-list (mutation_index new_value statutes mutation_index_found index)
    (if statutes
      (c
        (if (= index mutation_index) new_value (f statutes))
        (mutate-list mutation_index new_value (r statutes) (if (any (= index mutation_index) mutation_index_found) 1 0) (+ index ONE))
      )
      (if mutation_index_found
        ()
        (x) ; mutation index out of range
      )
    )
  )

  (defun-inline assert-price-info (statutes_puzzle_hash price_info)
    (list ASSERT_PUZZLE_ANNOUNCEMENT
      (sha256 statutes_puzzle_hash
        (concat
          PROTOCOL_PREFIX
          PRICE_PREFIX (sha256tree price_info)
        )
      )
    )
  )
)
