(

  (defun and_ (CLAUSES)
    (if (r CLAUSES)
      (qq (if (unquote (f CLAUSES)) (unquote (and_ (r CLAUSES))) ()))
      (f CLAUSES)
    )
  )

  ; logical AND function that evaluates clauses left to right
  (defmac and CLAUSES (if CLAUSES (and_ CLAUSES) 1))

  ; true/false for non-protocol/protocol CREATE_..._ANNOUNCEMENT condition
  (defun-inline is-valid-ann-cond (condition_body)
    (not
      (and
        (l condition_body)
        (not (l (f condition_body)))
        (= (strlen (f condition_body)) 33)
        (= (substr (f condition_body) 0 1) PROTOCOL_PREFIX)
      )
    )
  )

  ; true/false for non-protocol/protocol ..._MESSAGE condition
  (defun-inline is-valid-msg-cond (condition_body)
    (not
      (and
        (l condition_body)
        (l (r condition_body))
        (not (l (f (r condition_body))))
        (= (strlen (f (r condition_body))) 33)
        (= (substr (f (r condition_body)) 0 1) PROTOCOL_PREFIX)
      )
    )
  )

  ; true/false if non-protocol/protocol remark condition
  (defun-inline is-valid-rmk-cond (condition_body)
    (not
      (and
        (l condition_body)
        (not (l (f condition_body)))
        (= (strlen (f condition_body)) 1)
        (= (substr (f condition_body) 0 1) PROTOCOL_PREFIX)
      )
    )
  )

  ; LATER: check throughout protocol what cost saving is of checking conditions
  ;  as below instead of returning filtered conditions
  (defun check-tail-conditions ((@ conditions ((condition_code . condition_body) . rest_of_conditions)))
    (if conditions
      (if (= condition_code REMARK)
        (assert
          (is-valid-rmk-cond condition_body)
          (check-tail-conditions rest_of_conditions)
        )
        (if (any (= condition_code SEND_MESSAGE) (= condition_code RECEIVE_MESSAGE))
          (assert
            (is-valid-msg-cond condition_body)
            (check-tail-conditions rest_of_conditions)
          )
          (if (any (= condition_code CREATE_COIN_ANNOUNCEMENT) (= condition_code CREATE_PUZZLE_ANNOUNCEMENT))
            (assert
              (is-valid-ann-cond condition_body)
              (check-tail-conditions rest_of_conditions)
            )
            ; all other conditions allowed
            (check-tail-conditions rest_of_conditions)
          )
        )
      )
      1
    )
  )
)
