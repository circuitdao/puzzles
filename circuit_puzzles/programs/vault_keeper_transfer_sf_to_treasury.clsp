(mod
  (
    (@ VAULT_STATE
      (
       DEPOSITED_AMOUNT CAT_MOD_HASH BYC_TAIL_HASH BYC_MINTED_AMOUNT AUCTION_STATE INNER_PUZZLE_HASH
       STATUTES_STRUCT DISCOUNTED_PRINCIPAL TRANSFERRED_FEES statutes_puzzle_hash
      )
    )
    (@ args
      (
        byc_issuing_coin_info  ; (parent_id amount inner_puzzle_hash)
        statutes_cumulative_stability_df
        my_coin_id
        treasury_coin_info
        p2_treasury_mod_hash
        minimum_sf_transfer_amount
        current_timestamp
        current_stability_df
        price_info
      )
    )
  )

  (include *standard-cl-23*)
  (include vault.clib)
  (include statutes_utils.clib)
  (include condition_codes.clib)
  (include utils.clib)
  (include curry.clib)

  (assign
    byc_principal_to_melt BYC_MINTED_AMOUNT
    cumulative_stability_df (calculate-cumulative-discount-factor
      statutes_cumulative_stability_df
      current_stability_df
      (+ current_timestamp (* 3 MAX_TX_BLOCK_TIME))
      (r price_info)
    )
    (full_fees . liquidation_penalty) (calculate-fees
      byc_principal_to_melt
      cumulative_stability_df
      DISCOUNTED_PRINCIPAL
      BYC_MINTED_AMOUNT
      0 ; no liquidation penalty
    )
    fees (- full_fees TRANSFERRED_FEES)
    (treasury_parent treasury_launcher_id treasury_prev_launcher_id treasury_amount) treasury_coin_info
    new_treasury_amount (+ fees treasury_amount)
    byc_issuing_coin_id (calculate-byc-coin-id
      CAT_MOD_HASH
      BYC_TAIL_HASH
      byc_issuing_coin_info
    )
    treasury_coin_id (calculate-byc-coin-id
      CAT_MOD_HASH
      BYC_TAIL_HASH
      (list
        treasury_parent
        treasury_amount
        (curry_hashes
          p2_treasury_mod_hash
          (sha256 ONE p2_treasury_mod_hash)
          (sha256 ONE CAT_MOD_HASH)
          (sha256 ONE BYC_TAIL_HASH)
          (sha256tree STATUTES_STRUCT)
          (sha256 ONE treasury_prev_launcher_id)
          (sha256 ONE treasury_launcher_id)
        )
      )
    )
    (assert_debug
      ; only if there are fees to be paid
      (> fees 0)
      ; to avoid keepers dusting and hogging treasury coins
      (> fees minimum_sf_transfer_amount)
      ; only if it hasn't entered liquidation yet
      (not AUCTION_STATE)
      ; if there are byc minted, meaning there is something to run SF on
      (> BYC_MINTED_AMOUNT 0)
      (list
        (list
          (+ TRANSFERRED_FEES fees)
          DEPOSITED_AMOUNT
          BYC_MINTED_AMOUNT ; fees still need to be paid, just not to treasury
          AUCTION_STATE
          INNER_PUZZLE_HASH
          DISCOUNTED_PRINCIPAL
        )
        (list
          (list REMARK VAULT_ANN_PREFIX "i" byc_issuing_coin_id fees new_treasury_amount TRANSFERRED_FEES)
          ; signal to tail that it can issue BYC with certain amount
          (list CREATE_COIN_ANNOUNCEMENT
            (concat
              VAULT_ANN_PREFIX
              "i"
              byc_issuing_coin_id
              fees
              (sha256tree STATUTES_STRUCT)
            )
          )
          ; make sure tail has actually issued it too
          (list ASSERT_COIN_ANNOUNCEMENT
            (sha256
              byc_issuing_coin_id
              BYC_ANN_PREFIX
              'i'
              my_coin_id
              fees
              (sha256tree STATUTES_STRUCT)
            )
          )
          ; approve treasury coin to receive a deposit
          (list CREATE_COIN_ANNOUNCEMENT
            (concat VAULT_ANN_PREFIX treasury_coin_id fees new_treasury_amount)
          )
          (list ASSERT_COIN_ANNOUNCEMENT
            (sha256
              treasury_coin_id
              TREASURY_ANN_PREFIX
              my_coin_id
              fees
              new_treasury_amount
            )
          )
          (assert-statute statutes_puzzle_hash STATUTE_CUMULATIVE_STABILITY_FEE_DF statutes_cumulative_stability_df)
          (assert-statute statutes_puzzle_hash STATUTE_P2_TREASURY_MOD_HASH p2_treasury_mod_hash)
          (assert-statute statutes_puzzle_hash STATUTE_MINIMUM_SF_TRANSFER_AMOUNT minimum_sf_transfer_amount)
          (list ASSERT_MY_COIN_ID my_coin_id)
          (assert-price-info statutes_puzzle_hash price_info)
          (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp MAX_TX_BLOCK_TIME))
          (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp MAX_TX_BLOCK_TIME))
          (assert-statute statutes_puzzle_hash STATUTE_STABILITY_FEE_DF current_stability_df)
        )
      )
    )
  )
)
