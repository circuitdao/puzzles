; penalize announcer for not updating the price
(mod ((MOD_HASH STATUTES_STRUCT LAUNCHER_ID INNER_PUZZLE_HASH APPROVED DEPOSIT DELAY ATOM_VALUE COOLDOWN_START LAST_PENALTY_INTERVAL TIMESTAMP_EXPIRES)
      ; solution
      inner_puzzle_hash new_puzzle_hash deposit input_conditions
      (penalty_factor_per_interval statutes_inner_puzzle_hash penalty_interval_in_minutes announcer_min_deposit announcer_max_delay current_timestamp)
     )

  (include *standard-cl-23*)
  (include announcer.clib)
  (include condition_codes.clib)
  (include curry.clib)
  (include statutes_utils.clib)
  (include utils.clib)

  (assign
    expired_for_minutes (/ (- current_timestamp TIMESTAMP_EXPIRES) 60)
    current_penalty_interval (/ (/ current_timestamp 60) penalty_interval_in_minutes)
    penalized_deposit (if (> current_timestamp TIMESTAMP_EXPIRES)
      ; if it's expired, we penalize on expiration time
      (/ (* announcer_min_deposit
        (*
          (/ expired_for_minutes penalty_interval_in_minutes)
          penalty_factor_per_interval)
        )
        PERCENT_PRECISION
      )
      ; if not expired, we penalize per full deposit
      (/
        (*
          DEPOSIT
          penalty_factor_per_interval
        )
        PERCENT_PRECISION
      )
    )
    statutes_puzzle_hash (calculate-statutes-puzzle-hash STATUTES_STRUCT statutes_inner_puzzle_hash)
    (assert
      (> current_penalty_interval LAST_PENALTY_INTERVAL)
      (any
        (> current_timestamp TIMESTAMP_EXPIRES)
        ; we only penalize if announcers deposit is below min
        (> announcer_min_deposit DEPOSIT)
        ; we only penalize if announcers delay is above expected delay
        (> DELAY announcer_max_delay)
      )
      APPROVED
      LAUNCHER_ID
      (> DEPOSIT penalized_deposit)
      (> penalized_deposit 0)
      (li
        (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp MAX_TX_BLOCK_TIME))
        (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp MAX_TX_BLOCK_TIME))
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_PENALTY_INTERVAL_MINUTES penalty_interval_in_minutes)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_PENALTY_FACTOR_PER_INTERVAL penalty_factor_per_interval)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_MIN_DEPOSIT announcer_min_deposit)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_DELAY announcer_max_delay)
        (list ASSERT_SECONDS_ABSOLUTE TIMESTAMP_EXPIRES)
        &rest
        (recreate-myself-condition MOD_HASH
          STATUTES_STRUCT
          LAUNCHER_ID
          INNER_PUZZLE_HASH
          APPROVED
          (- DEPOSIT penalized_deposit)
          DELAY
          ATOM_VALUE
          COOLDOWN_START
          current_penalty_interval
          TIMESTAMP_EXPIRES
          input_conditions
        )
      )
    )
  )
)