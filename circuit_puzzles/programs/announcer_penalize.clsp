; penalize announcer for not updating the price
(mod ((MOD_HASH STATUTES_STRUCT LAUNCHER_ID INNER_PUZZLE_HASH APPROVED DEPOSIT PRICE_TTL ATOM_VALUE COOLDOWN_START LAST_PENALTY_INTERVAL_NUMBER TIMESTAMP_EXPIRES)
      ; solution
      inner_puzzle_hash new_puzzle_hash deposit input_conditions
      (penalty_per_interval_bps statutes_inner_puzzle_hash penalty_interval announcer_min_deposit announcer_price_ttl current_timestamp)
     )

  (include *standard-cl-23*)
  (include announcer.clib)
  (include condition_codes.clib)
  (include curry.clib)
  (include statutes_utils.clib)
  (include utils.clib)

  (assign
    expired_for_seconds (- current_timestamp TIMESTAMP_EXPIRES)
    penalty_interval_number (/ current_timestamp penalty_interval)
    penalty_tmp (/
      (* announcer_min_deposit
        (*
          (if (> current_timestamp TIMESTAMP_EXPIRES)
            (/ expired_for_seconds penalty_interval) ; if expired, penalize on time expired
            1 ; if not expired, we penalize once
          )
          penalty_per_interval_bps
        )
      )
      PERCENT_PRECISION
    )
    penalty (if (> penalty_tmp DEPOSIT) DEPOSIT penalty_tmp)
    statutes_puzzle_hash (calculate-statutes-puzzle-hash STATUTES_STRUCT statutes_inner_puzzle_hash)
    (assert
      (> penalty_interval_number LAST_PENALTY_INTERVAL_NUMBER)
      (any
        ; we can penalize if announcer price has expired
        (> current_timestamp TIMESTAMP_EXPIRES)
        ; or deposit is below min
        (> announcer_min_deposit DEPOSIT)
        ; or PRICE_TTL is above max
        (> PRICE_TTL announcer_price_ttl)
      )
      APPROVED
      LAUNCHER_ID
      (> penalty 0)
      (li
        (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp MAX_TX_BLOCK_TIME))
        (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp MAX_TX_BLOCK_TIME))
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_PENALTY_INTERVAL_MINUTES penalty_interval)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_PENALTY_FACTOR_PER_INTERVAL penalty_per_interval_bps)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_MIN_DEPOSIT announcer_min_deposit)
        (assert-statute statutes_puzzle_hash STATUTE_ANNOUNCER_DELAY announcer_price_ttl)
        (list ASSERT_SECONDS_ABSOLUTE TIMESTAMP_EXPIRES)
        &rest
        (recreate-myself-condition MOD_HASH
          STATUTES_STRUCT
          LAUNCHER_ID
          INNER_PUZZLE_HASH
          APPROVED
          (- DEPOSIT penalty)
          PRICE_TTL
          ATOM_VALUE
          COOLDOWN_START
          penalty_interval_number
          TIMESTAMP_EXPIRES
          input_conditions
        )
      )
    )
  )
)