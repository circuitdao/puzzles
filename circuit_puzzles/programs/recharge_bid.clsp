(mod (
    (MOD_HASH CAT_MOD_HASH CAT_TAIL_HASH LAUNCHER_ID STATUTES_STRUCT START_TIME LAST_BID CRT_LOT_AMOUNT)
    statutes_puzzle_hash  lineage_proof announcements
    (bid_amount target_puzzle_hash current_timestamp minimum_bid_amount
    offer_mod_hash auction_timeout ttl my_coin_id lot_amount raw_announcements)
  )

  (include *standard-cl-23*)
  (include curry.clib)
  (include condition_codes.clib)
  (include statutes_utils.clib)
  (include utils.clib)
  (include recharge_auction.clib)
  (assign
    (last_bid_amount last_target_puzzle_hash last_bid_timestamp) (
      if LAST_BID
        LAST_BID
        (list 0 () 0)
    )
    conditions (assert
      LAUNCHER_ID ; can't bid if auction hasn't started yet
      (> CRT_LOT_AMOUNT 0)
      (> bid_amount 0)
      (any (= last_bid_amount 0) (> bid_amount last_bid_amount))
      ; bids can't be smaller than this
      (> bid_amount minimum_bid_amount)
      ; auction hasn't expired yet
      (> auction_timeout (- current_timestamp START_TIME))
      ; TTL for bid hasn't expired yet
      (any (= last_bid_timestamp 0) (> ttl (- current_timestamp last_bid_timestamp)))
      (c
        ; update LAST_BID
        (list
          CREATE_COIN
          (curry_hashes
            MOD_HASH
            (sha256tree MOD_HASH)
            (sha256 ONE CAT_MOD_HASH)
            (sha256 ONE CAT_TAIL_HASH)
            (sha256 ONE LAUNCHER_ID)
            (sha256tree STATUTES_STRUCT)
            (sha256 ONE START_TIME)
            (sha256tree (list bid_amount target_puzzle_hash current_timestamp))
            (sha256 ONE lot_amount)
          )
          bid_amount
        )
        (c
          (list REMARK
            LAUNCHER_ID
            START_TIME
            (list bid_amount target_puzzle_hash current_timestamp)
            lot_amount
            bid_amount
          )
          (c
            (list ASSERT_MY_AMOUNT last_bid_amount)
            (c
              (assert-statute statutes_puzzle_hash STATUTE_RECHARGE_AUCTION_LOT_AMOUNT lot_amount)
              (c
                (assert-statute statutes_puzzle_hash STATUTE_RECHARGE_AUCTION_MINIMUM_BID_AMOUNT minimum_bid_amount)
                (c
                  (assert-statute statutes_puzzle_hash STATUTE_RECHARGE_AUCTION_TIMEOUT auction_timeout)
                  (c
                    (assert-statute statutes_puzzle_hash STATUTE_OFFER_MOD_HASH offer_mod_hash)
                    (c
                      (assert-statute statutes_puzzle_hash STATUTE_RECHARGE_AUCTION_BID_TTL ttl)
                      ; current_time minus one tx block time should already be in the past
                      (c
                        (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp 55))
                        (c
                          ; make sure that current_timestamp hasn't happen yet, allow it to be in mempool for 5 tx blocks
                          (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp (* 5 55)))
                          (c
                            (list ASSERT_MY_PARENT_ID
                              (sha256
                                ; TODO: do we need to pass full lineage proof here?
                                (f lineage_proof)
                                (curry_hashes
                                  CAT_MOD_HASH
                                  (sha256tree CAT_MOD_HASH)
                                  (sha256tree CAT_TAIL_HASH)
                                  (curry_hashes
                                    MOD_HASH
                                    (sha256tree MOD_HASH)
                                    (sha256tree CAT_MOD_HASH)
                                    (sha256tree CAT_TAIL_HASH)
                                    (sha256tree (f (r (r lineage_proof)))) ; launcher_id
                                    (sha256tree STATUTES_STRUCT)
                                    (sha256tree (f (r (r (r lineage_proof))))) ; start_time
                                    (sha256tree (f (r (r (r (r lineage_proof)))))) ; bid
                                    (sha256tree (f (r (r (r (r (r lineage_proof))))))) ; lot
                                  )
                                )
                                ; parent bid amount
                                (f (r lineage_proof))
                              )
                            )
                            announcements
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (if last_target_puzzle_hash
      (c
        ; assert that keeper absorbed their collateral + left over mojos from melting
        (list ASSERT_PUZZLE_ANNOUNCEMENT
          (sha256
            (curry_hashes CAT_MOD_HASH
              (sha256tree CAT_MOD_HASH)
              (sha256tree CAT_TAIL_HASH)
              offer_mod_hash
            )
            (sha256tree
              (c my_coin_id
              (list
                (list last_target_puzzle_hash last_bid_amount (list last_target_puzzle_hash)))))
          )
        )
        conditions
      )
      conditions
    )
  )
)