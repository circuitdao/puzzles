(mod
  (
    (@ VAULT_STATE
      (
       COLLATERAL CAT_MOD_HASH BYC_TAIL_HASH PRINCIPAL AUCTION_STATE INNER_PUZZLE_HASH
       STATUTES_STRUCT DISCOUNTED_PRINCIPAL TRANSFERRED_FEES statutes_puzzle_hash
      )
    )
    (@ args
      (
         byc_to_repay statutes_cumulative_stability_fee_rate byc_melting_coin_info minimum_principal_amount
         byc_treasury_coin_info p2_treasury_mod_hash price_info current_stability_fee_rate current_timestamp
      )
    )
  )

  (include *standard-cl-23*)
  (include condition_codes.clib)
  (include curry.clib)
  (include statutes_utils.clib)
  (include utils.clib)
  (include vault.clib)

  (defconst ANN_MELT 'x')

  (assign
    cumulative_stability_fee_rate (calculate-cumulative-discount-factor
      statutes_cumulative_stability_fee_rate
      current_stability_fee_rate
      ; don't allow anyone to pay less by borrowing from the future
      (+ current_timestamp (* 3 MAX_TX_BLOCK_TIME))
      (r price_info)
    )
    (calculated_stability_fee . _) (calculate-fees
      byc_to_repay
      cumulative_stability_fee_rate
      DISCOUNTED_PRINCIPAL
      PRINCIPAL
      0 ; no liquidation penalty when repaying
    )
    fees_to_pay (if (> TRANSFERRED_FEES calculated_stability_fee)
      0
      (- calculated_stability_fee TRANSFERRED_FEES)
    )
    fees_to_not_pay (- calculated_stability_fee fees_to_pay)
    ; burn the byc that's left after fees are paid
    negative_byc_principal_to_melt (* -1 (- byc_to_repay calculated_stability_fee))
    new_principal (+
      PRINCIPAL
      negative_byc_principal_to_melt
    )
    undiscounted_principal (* -1 (/ (* -1 DISCOUNTED_PRINCIPAL cumulative_stability_fee_rate) PRECISION))
    new_discounted_principal (if (= byc_to_repay undiscounted_principal)
      0
      (discount-principal-for-melt
        DISCOUNTED_PRINCIPAL
        (* -1 byc_to_repay)
        cumulative_stability_fee_rate
      )
    )
    (treasury_parent treasury_launcher_id treasury_prev_launcher_id treasury_amount) (if byc_treasury_coin_info byc_treasury_coin_info (list 0 0 0 0))
    treasury_coin_id (if byc_treasury_coin_info
      (calculate-byc-coin-id
        CAT_MOD_HASH
        BYC_TAIL_HASH
        (list
          treasury_parent
          treasury_amount
          (curry_hashes
            p2_treasury_mod_hash
            (sha256 ONE p2_treasury_mod_hash)
            (sha256 ONE CAT_MOD_HASH)
            (sha256 ONE BYC_TAIL_HASH)
            (sha256tree STATUTES_STRUCT)
            (sha256 ONE treasury_prev_launcher_id)
            (sha256 ONE treasury_launcher_id)
          )
        )
      )
      ()
    )
    new_treasury_amount (+ fees_to_pay treasury_amount)
    byc_coin_id_to_melt (calculate-byc-coin-id
      CAT_MOD_HASH
      BYC_TAIL_HASH
      byc_melting_coin_info
    )
    (assert
      (> byc_to_repay 0)
      (> undiscounted_principal (- byc_to_repay 1))
      ; either we're above min debt or we're at zero debt, to avoid dusting attacks and keep
      ; vault liquidation costs at healthy levels
      (any (= new_principal 0) (> new_principal minimum_principal_amount))
      (any (> new_principal 0)  (all (= new_principal 0) (= new_discounted_principal 0)))
      ; current time must be at least after last oracle update
      (> current_timestamp (f price_info))
      (list
        (list
          (if (> TRANSFERRED_FEES calculated_stability_fee)
            (- TRANSFERRED_FEES calculated_stability_fee)
            0
          ) ; final_transferred_fees in collateral_vault.clsp
          COLLATERAL new_principal AUCTION_STATE INNER_PUZZLE_HASH new_discounted_principal)
        (assign
          conditions (li
            (assert-statute statutes_puzzle_hash STATUTE_CUMULATIVE_STABILITY_FEE_DF statutes_cumulative_stability_fee_rate)
            (assert-statute statutes_puzzle_hash STATUTE_P2_TREASURY_MOD_HASH p2_treasury_mod_hash)
            (assert-statute statutes_puzzle_hash STATUTE_MINIMUM_VAULT_DEBT_AMOUNT minimum_principal_amount)
            (assert-price-info statutes_puzzle_hash price_info)
            (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp MAX_TX_BLOCK_TIME))
            (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp MAX_TX_BLOCK_TIME))
            (assert-statute statutes_puzzle_hash STATUTE_STABILITY_FEE_DF current_stability_fee_rate)
            &rest
            (if (> negative_byc_principal_to_melt -1)
              (list )
              (list
                ; signal to tail that it can melt the BYC
                (list SEND_MESSAGE
                  0x3f
                  (concat
                    VAULT_ANN_PREFIX
                    ANN_MELT
                    byc_coin_id_to_melt
                    (- negative_byc_principal_to_melt fees_to_not_pay)
                    (sha256tree STATUTES_STRUCT)
                  )
                  byc_coin_id_to_melt
                )
              )
            )
          )
          (if (> fees_to_pay 0)
            ; get an announcement from offer module that BYC was paid into treasury
            ; approve treasury coin to receive a deposit
            (c
              (list SEND_MESSAGE 0x3f
                (concat VAULT_ANN_PREFIX treasury_coin_id fees_to_pay new_treasury_amount)
                treasury_coin_id
              )
              conditions
            )
            ; else no approvals needed
            conditions
          )
        )
      )
    )
  )
)