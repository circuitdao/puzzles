(mod
  (
    (@ VAULT_STATE
      (
       COLLATERAL CAT_MOD_HASH BYC_TAIL_HASH PRINCIPAL AUCTION_STATE INNER_PUZZLE
       STATUTES_STRUCT DISCOUNTED_PRINCIPAL TRANSFERRED_FEES statutes_puzzle_hash
      )
    )
    (@ args
      (
        withdraw_amount
        price_info
        liquidation_ratio
        current_timestamp
        statutes_cumulative_stability_df
        current_stability_df
      )
    )
  )

  (include *standard-cl-23*)
  (include utils.clib)
  (include vault.clib)
  (include statutes_utils.clib)
  (include condition_codes.clib)

  (assign
    new_deposited_amount (- COLLATERAL withdraw_amount)
    cumulative_stability_df (calculate-cumulative-discount-factor
      statutes_cumulative_stability_df
      current_stability_df
      ; don't allow anyone to exploit some time to get tx into mempool and borrow from the future
      (+ current_timestamp (* 3 MAX_TX_BLOCK_TIME))
      (r price_info)
    )
    undiscounted_principal (/ (* DISCOUNTED_PRINCIPAL cumulative_stability_df) PRECISION)
    min_collateral_amount (
      get-min-collateral-amount
        undiscounted_principal
        liquidation_ratio
        (f price_info)
    )
    (assert
      (> new_deposited_amount -1)
      (> COLLATERAL new_deposited_amount)
      (> new_deposited_amount (- min_collateral_amount 1))
      (list
        (list TRANSFERRED_FEES new_deposited_amount PRINCIPAL AUCTION_STATE INNER_PUZZLE DISCOUNTED_PRINCIPAL)
        (list
          ; assert liquidation ratio
          (assert-statute statutes_puzzle_hash STATUTE_LIQUIDATION_RATIO liquidation_ratio)
          ; assert collateral price
          (assert-price-info statutes_puzzle_hash price_info)
        )
      )
    )
  )
)
