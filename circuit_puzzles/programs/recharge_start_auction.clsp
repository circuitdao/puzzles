(mod (
    (MOD_HASH CAT_MOD_HASH CAT_TAIL_HASH LAUNCHER_ID STATUTES_STRUCT START_TIME LAST_BID CRT_LOT_AMOUNT)
    statutes_puzzle_hash lineage_proof announcements
    (start_time my_coin_id treasury_minimum auction_timeout
     p2_treasury_hash treasury_coins)
  )

  (include *standard-cl-23*)
  (include condition_codes.clib)
  (include curry.clib)
  (include statutes_utils.clib)
  (include utils.clib)
  (include recharge_auction.clib) ; fails if included before utils.clib

  (assign
    (treasury_coins_count treasury_coins_total) (count-treasury-coins treasury_coins 0 0 ())
    (assert
      (> treasury_coins_count 0)
      LAUNCHER_ID
      ; can't run if LAST_BID is set
      (= LAST_BID ())
      (> start_time START_TIME)
      ; can only (re-)start auction if it hasn't started yet
      (any
        (= START_TIME 0)
        (> (- start_time START_TIME) auction_timeout)
      )
      (li
        (list
          CREATE_COIN
          (curry_hashes
            MOD_HASH
            (sha256 ONE MOD_HASH)
            (sha256 ONE CAT_MOD_HASH)
            (sha256 ONE CAT_TAIL_HASH)
            (sha256 ONE LAUNCHER_ID)
            (sha256tree STATUTES_STRUCT)
            (sha256 ONE start_time)
            (sha256 ONE ())
          )
          0
        )
        (list REMARK
          LAUNCHER_ID
          start_time
          () ; no bids
        )
        (assert-statute statutes_puzzle_hash STATUTE_RECHARGE_AUCTION_TIMEOUT auction_timeout)
        (assert-statute statutes_puzzle_hash STATUTE_TREASURY_MINIMUM treasury_minimum)
        (assert-statute statutes_puzzle_hash STATUTE_P2_TREASURY_MOD_HASH p2_treasury_hash)
        ; start_time minus one tx block time should already be in the past
        (list ASSERT_SECONDS_ABSOLUTE (- start_time MAX_TX_BLOCK_TIME))
        ; make sure that start_time hasn't happened yet, allow it to be in mempool for 5 tx blocks
        (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ start_time (* 5 MAX_TX_BLOCK_TIME)))
        ; start balance should be zero
        (list ASSERT_MY_AMOUNT 0)
        (list ASSERT_MY_COIN_ID my_coin_id)
        (list ASSERT_MY_PARENT_ID
          (calculate-coin-id
            (f lineage_proof)
            (curry_hashes
              CAT_MOD_HASH
              (sha256 ONE CAT_MOD_HASH)
              (sha256 ONE CAT_TAIL_HASH)
              (tree_hash_of_apply MOD_HASH (f (r (r lineage_proof))))
            )
            ; parent bid amount
            (f (r lineage_proof))
          )
        )
        &rest
        (deposit-to-treasury
          p2_treasury_hash
          CAT_MOD_HASH
          CAT_TAIL_HASH
          STATUTES_STRUCT
          treasury_minimum
          statutes_puzzle_hash
          treasury_coins_total ; expected balance after deposit of lot
          0 ; amount deposited
          0
          0
          (f treasury_coins)
          treasury_coins
          my_coin_id
          announcements
        )
      )
    )
  )
)