(mod
  (
    (MOD_HASH CAT_MOD_HASH CAT_TAIL_HASH CRT_TAIL_HASH LAST_BID LAUNCHER_ID CAT_LOT_AMOUNT STATUTES_STRUCT)
    statutes_puzzle_hash lineage_proof announcements
    (bid_crt_amount target_puzzle_hash current_timestamp my_amount ttl my_coin_id
          offer_mod_hash lot_amount)
  )
  (include *standard-cl-23*)
  (include curry.clib)
  (include condition_codes.clib)
  (include statutes_utils.clib)
  (include utils.clib)
  (include surplus_auction.clib)
  (assign
    (last_target_puzzle_hash last_bid_timestamp) (if LAST_BID LAST_BID (list 0 0))
    bid_conditions (assert
      ; we need lineage proof to ensure that a CAT lot is associated with this surplus auction
      (l lineage_proof)
      ; ensure bidder is aware what they bidding for, this might be different if lot amount changes while auction
      ; is running, so we're double checking it here to make sure that bidder is aware of the current lot amount
      (= lot_amount CAT_LOT_AMOUNT)
      ; must be higher than current bid (keepers are bidding for smallest amount of CRT per BYC lot)
      (any (all (= my_amount 0) (> bid_crt_amount 0)) (> bid_crt_amount my_amount))
      ; TTL for bid hasn't expired yet
      (any (not last_bid_timestamp) (> ttl (- current_timestamp last_bid_timestamp)))
      (c
        (list ASSERT_MY_AMOUNT my_amount)
          ; recreate with new top bid and new timestamp
        (c
          (list
            CREATE_COIN
            (curry_hashes
              MOD_HASH
              (sha256tree MOD_HASH)
              (sha256tree CAT_MOD_HASH)
              (sha256tree STATUTES_STRUCT)
              (sha256tree LAUNCHER_ID)
              (sha256tree lot_amount)
              (sha256tree CAT_TAIL_HASH)
              (sha256tree CRT_TAIL_HASH)
              (sha256tree (list target_puzzle_hash current_timestamp))
            )
            bid_crt_amount
          )
          (c
            (list REMARK LAUNCHER_ID lot_amount bid_crt_amount (list target_puzzle_hash current_timestamp) CAT_TAIL_HASH CRT_TAIL_HASH)
            (c
              (assert-statute statutes_puzzle_hash STATUTE_SURPLUS_AUCTION_BID_TTL ttl)
              (c
                (assert-statute statutes_puzzle_hash STATUTE_OFFER_MOD_HASH offer_mod_hash)
                ; current_time minus one tx block time should already be in the past
                (c
                  (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp 55))
                  (c
                    ; make sure that current_timestamp hasn't happen yet, allow it to be in mempool for 5 tx blocks
                    (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp (* 5 55)))
                    (c
                      (list ASSERT_MY_COIN_ID my_coin_id)
                      ; ensure lineage so we don't lose track of the lot
                      (c
                        (list ASSERT_MY_PARENT_ID
                          (sha256
                            (f lineage_proof)
                            (curry_hashes
                              CAT_MOD_HASH
                              (sha256tree CAT_MOD_HASH)
                              (sha256tree CRT_TAIL_HASH)
                              (curry_hashes MOD_HASH
                                (sha256tree MOD_HASH)
                                (sha256tree CAT_MOD_HASH)
                                (sha256tree STATUTES_STRUCT)
                                (sha256tree (f (r (r lineage_proof)))) ; launcher id
                                (sha256tree (f (r (r (r lineage_proof))))) ; lot amount
                                (sha256tree CAT_TAIL_HASH)
                                (sha256tree CRT_TAIL_HASH)
                                (sha256tree (f (r (r (r (r lineage_proof)))))) ; last bid
                              )
                            )
                            ; parent bid amount
                            (f (r lineage_proof))
                          )
                        )
                        announcements
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
    (if last_target_puzzle_hash
      (c
        ; assert that keeper absorbed their collateral + left over mojos from melting
        (list ASSERT_PUZZLE_ANNOUNCEMENT
          (sha256
            (curry_hashes CAT_MOD_HASH
              (sha256tree CAT_MOD_HASH)
              (sha256tree CRT_TAIL_HASH)
              offer_mod_hash
            )
            (sha256tree
              (c my_coin_id
                (list
                  (list last_target_puzzle_hash my_amount (list last_target_puzzle_hash))
                )
              )
            )
          )
        )
        bid_conditions
      )
      bid_conditions
    )
  )
)