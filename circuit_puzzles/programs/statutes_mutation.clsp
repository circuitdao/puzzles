(mod (STATUTES PRICE_INFO PAST_CUMULATIVE_STABILITY_FEE_DF PAST_CUMULATIVE_INTEREST_DF
      CAT_MOD_HASH CRT_TAIL_HASH PRICE_UPDATE_COUNTER
      mutation_index mutation_value crt_inner_puzzle_hash)

  (include *standard-cl-23*)
  (include curry.clib)
  (include condition_codes.clib)
  (include statutes_utils.clib)
  (include utils.clib)

  (defconstant CRT_ANN_PREFIX 'G')

  (defun filter-ann-conditions (
    (@ ann_conditions
      (
        (@ condition
          (condition_code . condition_body)
        )
        . rest
      )
    ) filtered_announcements)

    (if ann_conditions
      ; assert and create coin announcements are allowed
      ; TODO: do we need to limit this to protocol announcements only?
      ;   No, because Statutes doesn't issue a CREATE_COIN_ANNOUNCEMENT itself, and asserts are always fine
      (if (any (= condition_code ASSERT_COIN_ANNOUNCEMENT) (= condition_code CREATE_COIN_ANNOUNCEMENT))
        (filter-ann-conditions rest (c condition filtered_announcements))
        (if (any (= condition_code SEND_MESSAGE) (= condition_code RECEIVE_MESSAGE))
          ; non-protocol MESSAGES, and protocol MESSAGES that don't pretend to be from Statutes, are allowed
          (if
            (and
              (> (strlen (f (r condition_body))) 3)
              (= (substr (f (r condition_body)) 0 4) (concat PROTOCOL_PREFIX STATUTES_ANN_PREFIX))
            )
            (x)
            (filter-ann-conditions rest (c condition filtered_announcements))
          )
          ; no other conditions allowed
          (x)
        )
      )
      filtered_announcements
    )
  )

  (defun-inline get-crt-puzzle-hash (CAT_MOD_HASH CRT_TAIL_HASH INNER_PUZZLE_HASH)
    (curry_hashes CAT_MOD_HASH
      (sha256 ONE CAT_MOD_HASH)
      (sha256 ONE CRT_TAIL_HASH)
      INNER_PUZZLE_HASH
    )
  )

  (list
    ; we're updating if indexes match and it's not announcements
    (if (= mutation_index -1)
      ; this is a vote for announcements
      STATUTES
      (mutate-list mutation_index mutation_value STATUTES 0 0)
    )
    ; prices staying the same
    PRICE_INFO
    ; don't change the rate
    PAST_CUMULATIVE_STABILITY_FEE_DF
    PAST_CUMULATIVE_INTEREST_DF
    PRICE_UPDATE_COUNTER

    ;  updating statutes, assert permission
    (assert
      (size_b32 crt_inner_puzzle_hash)
      (> mutation_index -2)
      (if (= mutation_index -1)
        ; vote for announcements only, so this should just be a list
        (l mutation_value)
        ; should be  a list with 5 elements if mutating statutes
        (not (r (r (r (r (r mutation_value))))))
      )
      (li
        ; confirm to CRT voting coin that mutation was applied
        (list SEND_MESSAGE 0x10
          (concat PROTOCOL_PREFIX STATUTES_ANN_PREFIX STATUTES_MUTATION_PREFIX (sha256tree (c mutation_index mutation_value)))
        )
        (list ASSERT_HEIGHT_RELATIVE 1)
        &rest
        (if (= mutation_index -1)
          (filter-ann-conditions (f mutation_value) ())
          ()
        )
      )
    )
  )
)